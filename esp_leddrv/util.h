#define OLED_ADDRESS 0x3C
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define R_PWM 0
#define G_PWM 1
#define B_PWM 2

#define R_PIN 27
#define G_PIN 25
#define B_PIN 26

// https://lang-ship.com/blog/work/esp32-pwm-max/
#define PWM_FREQ 10000.
#define PWM_BIT 12

const int PWM_MAX=pow(2,PWM_BIT),ZPAD=1+(int)log10(PWM_MAX);
const char* week[7]={"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};

const unsigned char PROGMEM esp_logo[]={
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x5f, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x9f, 0xe7, 0x80, 0x0f, 0xc3, 0xf8, 0xfe, 0x1f, 0xc1, 0xfc, 0x7f, 0x0f, 0xe2, 0x1f, 0xc0,
	0x01, 0x03, 0xf3, 0x80, 0x3f, 0xe7, 0xf9, 0xff, 0x3f, 0xe3, 0xfc, 0xff, 0x1f, 0xe7, 0x3f, 0xc0,
	0x01, 0x38, 0xf9, 0xc0, 0x38, 0x06, 0x01, 0xc3, 0xb8, 0x67, 0x00, 0xc0, 0x18, 0x07, 0x30, 0x00,
	0x02, 0x7f, 0x3c, 0xc0, 0x30, 0x0e, 0x01, 0xc3, 0xb8, 0x67, 0x00, 0xc0, 0x38, 0x07, 0x70, 0x00,
	0x02, 0xff, 0x9e, 0xe0, 0x30, 0x0e, 0x01, 0xc3, 0xb8, 0x67, 0x00, 0xc0, 0x38, 0x07, 0x70, 0x00,
	0x02, 0xff, 0xcf, 0x60, 0x30, 0x0e, 0x01, 0xc3, 0xb8, 0x67, 0x00, 0xc0, 0x38, 0x07, 0x70, 0x00,
	0x02, 0xe1, 0xe7, 0x20, 0x3f, 0xc7, 0xf1, 0xc3, 0xb8, 0x67, 0xf8, 0xfe, 0x1f, 0xc7, 0x7f, 0x80,
	0x02, 0xfc, 0xf7, 0xa0, 0x3f, 0xc7, 0xf9, 0xff, 0x3f, 0xe7, 0xf8, 0xff, 0x1f, 0xe7, 0x7f, 0x80,
	0x02, 0x7e, 0x73, 0x80, 0x30, 0x00, 0x19, 0xff, 0x3f, 0xc7, 0x00, 0x03, 0x80, 0x67, 0x70, 0x00,
	0x02, 0x3f, 0x7b, 0x80, 0x30, 0x00, 0x19, 0xc0, 0x38, 0xe7, 0x00, 0x03, 0x80, 0x67, 0x70, 0x00,
	0x01, 0x07, 0xbb, 0xc0, 0x30, 0x00, 0x19, 0xc0, 0x38, 0x67, 0x00, 0x03, 0x80, 0x67, 0x70, 0x00,
	0x01, 0x13, 0xb9, 0x80, 0x30, 0x00, 0x19, 0xc0, 0x38, 0x67, 0x00, 0x03, 0x80, 0x67, 0x70, 0x00,
	0x00, 0xbb, 0xb9, 0x80, 0x38, 0x00, 0x19, 0xc0, 0x38, 0x77, 0x00, 0x03, 0x80, 0x67, 0x70, 0x00,
	0x00, 0xf3, 0xb8, 0x00, 0x3f, 0xef, 0xf9, 0xc0, 0x38, 0x73, 0xfc, 0xff, 0x3f, 0xe7, 0x70, 0x00,
	0x00, 0x63, 0xb8, 0x80, 0x1f, 0xe7, 0xf0, 0xc0, 0x18, 0x31, 0xfc, 0xfe, 0x1f, 0xc2, 0x30, 0x00,
	0x00, 0x33, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM logo_bmp[]={
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x07, 0xf8, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x70, 0x00, 0x00, 
  0x00, 0x00, 0x3c, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0xf8, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x07, 0xe0, 0x00, 0x00, 0x04, 0x60, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3d, 0xb0, 0x00, 
  0x00, 0x0f, 0x00, 0x00, 0x03, 0xf6, 0x10, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 
  0x00, 0x38, 0x00, 0x00, 0x60, 0x00, 0x0c, 0x00, 0x00, 0x30, 0x00, 0x00, 0xc0, 0x00, 0x0c, 0x00, 
  0x00, 0x70, 0x00, 0x21, 0x80, 0x00, 0x0e, 0x00, 0x00, 0x70, 0x00, 0x76, 0x1c, 0x00, 0x0f, 0x00, 
  0x00, 0xe0, 0x03, 0xfc, 0x1f, 0x38, 0x0f, 0x00, 0x00, 0xa0, 0x1f, 0x00, 0x11, 0xe3, 0x07, 0x00, 
  0x00, 0xe0, 0x38, 0x00, 0x00, 0x01, 0x87, 0x00, 0x01, 0xc0, 0x70, 0x00, 0x00, 0x00, 0xc7, 0x80, 
  0x01, 0xc0, 0xe0, 0x00, 0x00, 0x00, 0x63, 0x80, 0x01, 0xc1, 0xc0, 0x00, 0x00, 0x00, 0x33, 0x80, 
  0x01, 0xc3, 0x80, 0x7c, 0x03, 0xf8, 0x33, 0x80, 0x01, 0xc3, 0x01, 0xc0, 0x00, 0x0c, 0x13, 0xc0, 
  0x01, 0xc7, 0x03, 0x00, 0x00, 0x00, 0x1b, 0xc0, 0x00, 0xc5, 0x04, 0x18, 0x01, 0x80, 0x09, 0xc0, 
  0x00, 0x45, 0x04, 0x10, 0x01, 0x00, 0x0f, 0x00, 0x00, 0x41, 0x00, 0x10, 0x01, 0x80, 0x01, 0x00, 
  0x00, 0x20, 0x00, 0x10, 0x01, 0x80, 0x07, 0x00, 0x00, 0x28, 0x00, 0x18, 0x00, 0x80, 0x07, 0x00, 
  0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x0f, 0x80, 0x08, 0x00, 0x00, 0x02, 0x00, 
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x01, 0xc4, 0x00, 
  0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x01, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM logo_txt[]={
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x02, 0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x00, 0x07, 0x00, 0xf0, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x0f, 0x80, 0xf0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x81, 0xf0, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x0f, 0x81, 0xb0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0xc1, 0xb8, 0x00, 0x06, 0x00, 0x00, 0x00, 
  0x0c, 0xc3, 0xb8, 0x1f, 0x06, 0xf8, 0x07, 0x80, 0x0c, 0xc3, 0x38, 0x3f, 0x87, 0xfc, 0x0f, 0xe0, 
  0x0c, 0xe3, 0x38, 0x71, 0x87, 0x8e, 0x1c, 0x70, 0x0c, 0x67, 0x38, 0xe0, 0x07, 0x06, 0x38, 0x70, 
  0x0c, 0x67, 0x38, 0xc0, 0x06, 0x07, 0x3f, 0xf0, 0x0c, 0x76, 0x38, 0xc0, 0x06, 0x07, 0x3f, 0xe0, 
  0x0c, 0x3e, 0x38, 0xc0, 0x06, 0x07, 0x30, 0x00, 0x0c, 0x3e, 0x38, 0xe0, 0x87, 0x06, 0x38, 0x20, 
  0x0c, 0x3c, 0x38, 0x71, 0xc7, 0x8e, 0x1c, 0x70, 0x1c, 0x1c, 0x38, 0x3f, 0x87, 0xfc, 0x0f, 0xe0, 
  0x0c, 0x00, 0x18, 0x1f, 0x06, 0xf8, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x30, 0x00, 0x00, 0x00, 0x60, 
  0x0f, 0xfc, 0x00, 0x38, 0x00, 0x00, 0x00, 0x70, 0x0f, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x60, 
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x6e, 0x30, 0xde, 0x01, 0xfe, 0x60, 
  0x0f, 0xf8, 0x7e, 0x30, 0xff, 0x07, 0xfe, 0x60, 0x0f, 0xf8, 0x78, 0x30, 0xf3, 0x86, 0x38, 0x60, 
  0x0c, 0x00, 0x70, 0x30, 0xe1, 0x8e, 0x18, 0x60, 0x0c, 0x00, 0x60, 0x30, 0xc1, 0x8e, 0x18, 0x60, 
  0x0c, 0x00, 0x60, 0x30, 0xc1, 0x87, 0x78, 0x60, 0x0c, 0x00, 0x60, 0x30, 0xc1, 0x83, 0xf0, 0x60, 
  0x0c, 0x00, 0x60, 0x30, 0xc1, 0x87, 0xc0, 0x60, 0x0e, 0x00, 0x60, 0x30, 0xc1, 0x8e, 0x00, 0x60, 
  0x0f, 0xfc, 0x60, 0x30, 0xc1, 0x87, 0xf8, 0x60, 0x07, 0xfc, 0x60, 0x30, 0xc1, 0x87, 0xfc, 0x60, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x06, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x1e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const char html[] PROGMEM=R"rawliteral(
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>ESP_LEDDRV</title>
</head>
<body>
  <style>
    :root,input{background-color:#222;color:#fff;font-family:monospace;}
    input{vertical-align:middle;}input[type=range]{width:100%;max-width:640px;margin:0;box-sizing:border-box;}
    pre{white-space:pre-wrap;}
  </style>

  <h1>ESP_LEDDRV</h1>
  <div id="wrap" hidden>
    R:<input type="range" id="ir" step="any" value="0"><br>
    G:<input type="range" id="ig" step="any" value="0"><br>
    B:<input type="range" id="ib" step="any" value="0"><br><br>
    H:<input type="range" id="ih" step="any" value="0"><br>
    S:<input type="range" id="is" step="any" value="0"><br>
    V:<input type="range" id="iv" step="any" value="0"><br>
  </div>
  <pre id="log">Connecting…</pre>
  <button id="logout">logout</button>

  <script>
    'use strict';
    let ws,recieved={},timer=0;
    const ws_init=()=>{
      console.log('ws_init');
      ws=new WebSocket(`ws://${window.location.hostname}/ws`);
      ws.onopen=e=>{
        console.log(log.textContent='Opened :)');
      };
      ws.onclose=e=>{
        console.log(log.textContent='Closed :(');
        wrap.hidden=true;
        setTimeout(ws_init,2000);
      };
      ws.onmessage=e=>{
        Object.assign(recieved,JSON.parse(e.data));
        log.textContent=JSON.stringify(recieved,null,'\t');
        if(recieved.purpose=='init')wrap.hidden=false;
      };
      ws.onerror=console.log;
    },
    send=()=>ws.send('0'+[ir,ig,ib].map(x=>(''+Math.round(x.value/100*recieved.max)).padStart(recieved.zpad,'0')).join('')),
    hsv=(h=0,s=1,v=1)=>[5,3,1].map(i=>((k=(h*6+i)%6)=>v-Math.max(0,Math.min(1,k,4-k))*s*v)()),
    rgb=(r=0,g=0,b=0)=>((v=Math.max(r,g,b),c=v-Math.min(r,g,b))=>[c&&((v==r?(g-b)/c:v==g?2+(b-r)/c:4+(r-g)/c)/6+1)%1,v&&c/v,v])();

    [
      [[ir,ig,ib],()=>send(rgb(...[ir,ig,ib].map(y=>y.value/100)).forEach((y,i)=>[ih,is,iv][i].value=y*100))],
      [[ih,is,iv],()=>send(hsv(...[ih,is,iv].map(y=>y.value/100)).forEach((y,i)=>[ir,ig,ib][i].value=y*100))]
    ].forEach(w=>
      w[0].forEach((x,i)=>{
        x.oninput=()=>{if(timer)return;w[1]();timer=setTimeout(()=>timer=0,50);};
        x.onchange=()=>{clearTimeout(timer);timer=0;w[1]();};
      })
    );
    logout.onclick=()=>fetch('/logout').finally(()=>location.reload());
    onload=ws_init;
  </script>
</body>
</html>

)rawliteral";
